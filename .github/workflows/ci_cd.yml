name: CICD

on:
  workflow_dispatch:
  pull_request:
    types: [ closed ]
    branches:
      - release




env:
  NAME_VERSION_FILE: ${{ github.workspace }}/version/version
  RELEASE: release
  MINOR: minor
  PATCH: patch
  VERSION_UP: .github/workflows/version_update.py
  REPO_NAME: ${{ github.event.repository.name }}
  PR_NUMBER: ${{ github.event.number }}
  URL_REPO: ${{ github.server_url }}/${{ github.repository }}
  CHANGELOG_FILE: changelog.md



jobs:
  call-tests:
    uses: ./.github/workflows/test.yml

  call-antivirus:
    needs: call-tests
    uses: ./.github/workflows/security.yml

    
  validate_branch:  
    needs: call-antivirus
    runs-on: self-hosted
    steps:
      - name: Checkout code #Клонирование репозитория на виртуалку
        uses: actions/checkout@v2

      - name: Parse branch name
        id: parse-data # парсим имя ветки :)
        uses: tj-actions/branch-names@v8

      - name: 
        run: |
          echo "EVENT_NAME   ${{github.event_name}}"
          echo "ACTION       ${{github.event.action}}"
          echo "IS_PULL_REQUEST_MERGED   ${{github.pull_request.merged}}"
          echo "CURRENT_BRANCH     ${{steps.parse-data.outputs.current_branch}}"
          echo "REF          ${{github.ref}}"
          echo "REF_NAME     ${{github.ref_name}}"
          echo "DEFAULT_BRANCH  ${{steps.parse-data.outputs.default_branch}}"

  update-version:
    runs-on: self-hosted
    needs: validate_branch
    outputs:
      tag: ${{steps.output-tag.outputs.TAG_MSG}}
    steps:
      - name: Parse branch name
        id: parse-data
        uses: tj-actions/branch-names@v8

      - name: Сheckout on [${{env.RELEASE}}]
        uses: actions/checkout@v3 #так то не факт что тут в релиз чекаутнеться
        # Если зафакапить on: то может произойти каша :(

      - name: Validate branch (feature/hotfix) # Отладка 
        id: validate_branch
        if: |
          contains(steps.parse-data.outputs.current_branch, 'feature') || 
          contains(steps.parse-data.outputs.current_branch, 'hotfix')
        run: echo "Valid branch" #Просто вывод в консоль, эта часть нужна для отладки 

      - name: Run minor version update script #обновление версии скриптом в случае feature/minor
        id: update-minor-version
        if: |
          contains(steps.parse-data.outputs.current_branch, 'feature')
        run: |
          echo "python ${VERSION_UP} ${MINOR} ${NAME_VERSION_FILE}"
          python ${VERSION_UP} ${MINOR} ${NAME_VERSION_FILE}

      - name: Run patch version update script #обновление версии скриптом в случае hotfix/patch
        id: update-patch-version
        if: |
          contains(steps.parse-data.outputs.current_branch, 'hotfix')
        run: |
          python ${VERSION_UP} ${PATCH} ${NAME_VERSION_FILE}

      - name: Set output tag
        id: output-tag
        run: |
          python ${VERSION_UP} read ${NAME_VERSION_FILE}
          TAG_MSG=$(python ${VERSION_UP} read ${NAME_VERSION_FILE})
          echo "$TAG_MSG"
          echo "TAG_MSG=${TAG_MSG}" >> $GITHUB_OUTPUT

      - name: Setup git config
        run: |
          git config user.name "GitHub Actions Bot" #Под каким ником будет комит
          git config user.email "<>" #Под какой почтой будет коммит
      
      - name: Commit and push changes
        run: |
          git add .
          git commit -m "Update version"
          git push origin ${RELEASE}

  add-label-version_update:
    if: ${{ github.event_name == 'pull_request' }}
    needs: update-version
    runs-on: self-hosted
    permissions:
      pull-requests: write
      issues: write
      contents: write

    steps:
      - name: Add version label to PR
        uses: actions-ecosystem/action-add-labels@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          labels: ${{ needs.update-version.outputs.tag }}

  changelog:
    needs: add-label-version_update
    uses: ./.github/workflows/changelog.yml
    with:
      update_tag: ${{needs.update-version.outputs.tag}}


  docker_push:
    needs: [add-label-version_update, update-version]
    uses: ./.github/workflows/docker_push.yml
    secrets: inherit
    with:
      update_tag: ${{ needs['update-version'].outputs.tag }}

  telegram_notify:
    needs: [docker_push, changelog]
    uses: ./.github/workflows/telegram_notify.yml
    secrets: inherit
    with:
      update_tag: ${{needs.update-version.outputs.tag}}


